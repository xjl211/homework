浏览器在开始工作之前需要读取访问的是哪里，例如点击的链接等这些情况都会触发动作也就是导航，导航是网页中交互的第一步，会触发
一系列反应   初始化请求，一旦url提供给浏览器加载的时候就会发生以下的事件：
1：检查HSTS, :浏览器会首先检查这个URL是不是一个HTTP（不安全)协议,如果是一个HTTP协议的话，浏览器需要检查这个域名是否在HSTS（
严格安全传输）的清单中，如果自己请求的HTTP开头的host处于这个HSTS清单中，这个请求会被转换为开头https的URL.
2:检查service workers : 接下来浏览器要判断servi worker是否能用来处理请求  service workers是一个相对于稍微新一点的特性，它需要通过
对网络的请求离线应用的能力，这些请求都会被保存在脚本控制的缓存中，能够使网站更好的控制什么时候使用缓存的项目，缓存是跟域名绑定
的，也就是说每个域都会有自己的缓存黑盒，并与其他的黑盒隔开。当页面被访问时就会注册一个service worker	，这是一个工作线程来完成的
可以把注册和url映射到本地的数据库中，如果能在本地数据中查找出对应的url，还与service worker相对应，就会被允许处理这个请求，当浏览
器没有发现service worke请求的话，就会继续网络请求层。
3检查网络缓存：   浏览器会通过网络请求层来检查是否存在全新的响应，一般是由Cache-Control字段决定的，字段会设置max-age的值来决定
缓存需要多久进行刷新，no-store字段来判断是否需要被缓存，如果浏览器在缓存中找不到任何的东西就会进行网络请求了。
4：检查网络连接：  如果现有一个和主机，端口建立起的新请求，则这个会被浏览器拿去复用并不会去建立一个新的，否则浏览器会走网络层来
了解是否需要执行DNS（域名系统）查询，具体流程为：先会寻找自己本地的DNS缓存也就是存储在自己的设备上，然后根据DNS缓存是否过期
来确定需不需要访问远程域名服务器，这个域名服务器是由互联网提供商ISP分配主机地址，域名最后会返回准确的IP地址给浏览器进行连接。
5：建立连接：   浏览器现在可以与服务器进行连接，并且服务端也知道需要从客户端这边接收和发送信息，如果是使用TLS(安全传输层协议），
我们需要执行一次TLS握手流程以验证服务器提供的证书。第一次通过连接发起的请求叫做顶级页面请求。一般情况下，这个请求的资源会是一个
HTML文件，由服务器提供给客户端。
6：处理响应：  当响应以数据流的格式到达客户端，客户端就会开始解析，会先检查响应的头，HTTP是否是以键值对的形式成为HTTP的一部分
如果响应头需要进行重定向，浏览器会在一次进行导航，并回到最初的步骤，检查是否需要执行HSTS的升级也就是升级为https，页面会继续发
起请求，因为页面还有很多对整体体验很重要的字资源，例如图片，脚本等等，而且这些字资源中也有引用一些其他的资源例如背景图片等等
如果不加载引用这些字资源的话看到的将会是一个空白.
